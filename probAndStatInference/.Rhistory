'O2',#          I have difficulty understanding abstract ideas. REVERSE CODE
'O3',#          I have a vivid imagination.
'O4',#          I am not interested in abstract ideas. REVERSE CODE
'O5',#          I have excellent ideas.
'O6',#          I do not have a good imagination. REVERSE CODE
'O7',#          I am quick to understand things.
'O8',#          I use difficult words.
'O9',#          I spend time reflecting on things.
'O10'#        I am full of ideas.
)
reverse_code_cols <- c(reverse_code_cols, 'O2','O4','O6')
df <- select(dfAll, c(extraversion, agreeableness, conscientiousness, neuroticism, openness ))
head(df) %>%
kbl(caption = "Table 2: First lines of Student Dataset only with test columns") %>%
kable_styling()
#Check if there are Zeros on the dataset
na_count <-sapply(df, function(y) sum(length(which(y == 0))))
na_count <- data.frame(na_count)
top_missing <- (na_count  %>% arrange(desc(na_count)) %>% slice(1:1)) [[1]]
top_missing_perc <- round((top_missing * 100) / nrows,2)
na_count  %>% arrange(desc(na_count)) %>% slice(1:10) %>%
kbl(caption = "Table 3: Quantity of missed answers on the dataset") %>%
kable_styling()
dfDR <- select(df, c(conscientiousness, neuroticism, openness ))
summary(dfDR) %>%
kbl(caption = "Table 4: Summary Statistics of Dataset with Dimension Reduction Applied") %>%
kable_styling()
dfDR <- select(df, c(conscientiousness, neuroticism, openness ))
summary(dfDR) %>%
kbl(caption = "Table 4: Summary Statistics of Dataset with Dimension Reduction Applied") %>%
kable_styling()
#create a correlation matrix
dfDR_Matrix<-cor(dfDR)
#round(dfDR_Matrix, 2)
#Showing significance levels also
#Hmisc::rcorr(as.matrix(dfDR))
#Visualisation of correlations using circles
#corrplot::corrplot(dfDR_Matrix, method="circle")
#Visualisation using numbers
#corrplot::corrplot(dfDR_Matrix, method="number")
#Visualisation of significance levels at 0.05
res1 <- corrplot::cor.mtest(dfDR_Matrix, conf.level = .95)
corrplot::corrplot(dfDR_Matrix, p.mat = res1$p, sig.level = .05,  main = "\nPlot 1: Corr Plot for significance level .05")
psych::cortest.bartlett(dfDR_Matrix, n=nrow(dfDR))
REdaS::KMOS(dfDR)
det(dfDR_Matrix)
pc1 <-  psych::principal(dfDR, nfactors = length(dfDR), rotate = "none")
#pc1#output all details of the PCA
plot(pc1$values, type = "b", main = "Plot 2: Scree Plot for PCA") #scree plot
# neuroticism openness
conscientiousnessDf<-dfDR[,conscientiousness]
neuroticismDf<-dfDR[,neuroticism]
opennessDf<-dfDR[,openness]
#Output our Cronbach Alpha values
conscientiousnessAlpha <- psych::alpha(conscientiousnessDf,check.keys=TRUE)['total']$total$raw_alpha
neuroticismAlpha <- psych::alpha(neuroticismDf,check.keys=TRUE)['total']$total$raw_alpha
opennessAlpha <- psych::alpha(opennessDf,check.keys=TRUE)['total']$total$raw_alpha
data.frame(conscientiousnessAlpha = conscientiousnessAlpha, neuroticismAlpha = neuroticismAlpha, opennessAlpha = opennessAlpha) %>%
kbl(caption = "Table 7: Cronbach Alpha values") %>%
kable_styling()
#Output our Cronbach Alpha values
conscientiousnessAlpha <- psych::alpha(conscientiousnessDf)['total']$total$raw_alpha
#Output our Cronbach Alpha values
conscientiousnessAlpha <- psych::alpha(conscientiousnessDf,check.keys=TRUE)['total']$total$raw_alpha
neuroticismAlpha <- psych::alpha(neuroticismDf,check.keys=TRUE)['total']$total$raw_alpha
opennessAlpha <- psych::alpha(opennessDf,check.keys=TRUE)['total']$total$raw_alpha
data.frame(conscientiousnessAlpha = conscientiousnessAlpha, neuroticismAlpha = neuroticismAlpha, opennessAlpha = opennessAlpha) %>%
kbl(caption = "Table 7: Cronbach Alpha values") %>%
kable_styling()
#Function to facilitate creation of an anovatab, extracted from my github: https://github.com/mauriciodeoliveirareis/Stat-Program-and-Applications-MATH9902/blob/main/linearGeneralRegModel/ca1/anovatab.R
anovatab <-
function(mod){
tab=as.matrix(anova(mod))
rows=dim(tab)[1]
moddf=sum(tab[,1])-tab[rows,1]
ssmodel=sum(tab[,2])-tab[rows,2]
msmodel=ssmodel/moddf
f=msmodel/tab[rows,3]
p=1-pf(f,moddf,tab[rows,1])
tab2=tab[(rows-1):rows,]
tab2[1,1:5]=c(moddf,ssmodel,msmodel,f,p)
tab2=rbind(tab2,c(moddf+tab2[2,1],ssmodel+tab2[2,2],rep(NA,3)))
rownames(tab2)=c('Model','Error','Total')
colnames(tab2)[1]='df'
return(print(tab2,na.print = "" , quote = FALSE,digits=3))
}
## fit  model
fit1=lm(O10~O1+O8, data = df)
print("Table 8: Linear Regression Model")
summary(fit1)
# setwd as the folder where this script is in
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
#Load and Install required packages
install_packages <- function(pkg) {
# Install package if it is not already
if (!(pkg %in% installed.packages()[, "Package"])){
install.packages(pkg, repos='http://cran.us.r-project.org')
}
library(pkg, character.only = TRUE)
} # end installPackages()
#Create the list of packages we need
pkg_list = c("ggplot2","dplyr","kableExtra", "caret", "Hmisc")
#Call our function passing it the list of packages
lapply(pkg_list, install_packages)
#load studentpartII dataset and check its head
dfAll <- read.csv("studentpartII.csv", header=T)
ncols <- ncol(dfAll)
nrows <- nrow(dfAll)
head(dfAll) %>%
kbl(caption = "Table 1: First lines of Student Dataset") %>%
kable_styling()
#Check if there are NAs on the dataset
na_count <-sapply(dfAll, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
na_count  %>% arrange(desc(na_count)) %>% slice(1:10)%>%
kbl(caption = "Table 1.1: Quantity of NAs per column") %>%
kable_styling()
extraversion <- c(
'E1',#          I am the life of the party.
'E2',#          I don't talk a lot. REVERSE CODE
'E3',#          I feel comfortable around people.
'E4',#          I keep in the background. REVERSE CODE
'E5',#          I start conversations.
'E6',#          I have little to say. REVERSE CODE
'E7',#          I talk to a lot of different people at parties.
'E8',#          I don't like to draw attention to myself. REVERSE CODE
'E9',#          I don't mind being the center of attention.
'E10'#        I am quiet around strangers. REVERSE CODE
)
# creating reverse code cols array to use later for reverse code
reverse_code_cols <- c('E2', 'E4', 'E6', 'E8', 'E10')
agreeableness <- c(
'A1',#          I feel little concern for others. REVERSE CODE
'A2',#          I am interested in people.
'A3',#          I insult people. REVERSE CODE
'A4',#          I sympathize with others' feelings.
'A5',#          I am not interested in other people's problems. REVERSE CODE
'A6',#          I have a soft heart.
'A7',#          I am not really interested in others. REVERSE CODE
'A8',#          I take time out for others.
'A9',#          I feel others' emotions.
'A10'#        I make people feel at ease.
)
reverse_code_cols <- c(reverse_code_cols, 'A1','A3','A5','A7')
conscientiousness <- c(
'C1',#          I am always prepared.
'C2',#          I leave my belongings around. REVERSE CODE
'C3',#          I pay attention to details.
'C4',#          I make a mess of things. REVERSE CODE
'C5',#          I get chores done right away.
'C6',#          I often forget to put things back in their proper place. REVERSE CODE
'C7',#          I like order.
'C8',#          I shirk my duties. REVERSE CODE
'C9',#          I follow a schedule.
'C10'#        I am exacting in my work.
)
reverse_code_cols <- c(reverse_code_cols, 'C2','C4','C6','C8')
neuroticism <- c(
'N1',#          I get stressed out easily.
'N2',#          I am relaxed most of the time. REVERSE CODE
'N3',#          I worry about things.
'N4',#          I seldom feel blue. REVERSE CODE
'N5',#          I am easily disturbed.
'N6',#          I get upset easily.
'N7',#          I change my mood a lot.
'N8',#          I have frequent mood swings.
'N9',#          I get irritated easily.
'N10'#        I often feel blue.
)
reverse_code_cols <- c(reverse_code_cols, 'N2','N4')
openness <- c(
'O1',#          I have a rich vocabulary.
'O2',#          I have difficulty understanding abstract ideas. REVERSE CODE
'O3',#          I have a vivid imagination.
'O4',#          I am not interested in abstract ideas. REVERSE CODE
'O5',#          I have excellent ideas.
'O6',#          I do not have a good imagination. REVERSE CODE
'O7',#          I am quick to understand things.
'O8',#          I use difficult words.
'O9',#          I spend time reflecting on things.
'O10'#        I am full of ideas.
)
reverse_code_cols <- c(reverse_code_cols, 'O2','O4','O6')
df <- select(dfAll, c(extraversion, agreeableness, conscientiousness, neuroticism, openness ))
head(df) %>%
kbl(caption = "Table 2: First lines of Student Dataset only with test columns") %>%
kable_styling()
#Check if there are Zeros on the dataset
na_count <-sapply(df, function(y) sum(length(which(y == 0))))
na_count <- data.frame(na_count)
top_missing <- (na_count  %>% arrange(desc(na_count)) %>% slice(1:1)) [[1]]
top_missing_perc <- round((top_missing * 100) / nrows,2)
na_count  %>% arrange(desc(na_count)) %>% slice(1:10) %>%
kbl(caption = "Table 3: Quantity of missed answers on the dataset") %>%
kable_styling()
# Function to find the mode
findMode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#for all columns
for (i in colnames(df)){
#if the columns has any occurence of zero
if (length(df[i][df[i] == 0]) > 0){
print (paste("looking at ", i))
columnMode <- findMode(df[,i])
print (paste("Zeros will be replaced by mode which is:", columnMode))
print(df[i][df[i] == 0])
#assign the mode of that columns to zero values
df[i][df[i] == 0] <- columnMode
}
}
#adjust reverse coded cols
for (i in reverse_code_cols){
print(i)
df[i] <- 5 + 1 - df[i]
}
dfDR <- select(df, c(conscientiousness, neuroticism, openness ))
summary(dfDR) %>%
kbl(caption = "Table 4: Summary Statistics of Dataset with Dimension Reduction Applied") %>%
kable_styling()
#create a correlation matrix
dfDR_Matrix<-cor(dfDR)
#round(dfDR_Matrix, 2)
#Showing significance levels also
#Hmisc::rcorr(as.matrix(dfDR))
#Visualisation of correlations using circles
#corrplot::corrplot(dfDR_Matrix, method="circle")
#Visualisation using numbers
#corrplot::corrplot(dfDR_Matrix, method="number")
#Visualisation of significance levels at 0.05
res1 <- corrplot::cor.mtest(dfDR_Matrix, conf.level = .95)
corrplot::corrplot(dfDR_Matrix, p.mat = res1$p, sig.level = .05,  main = "\nPlot 1: Corr Plot for significance level .05")
psych::cortest.bartlett(dfDR_Matrix, n=nrow(dfDR))
REdaS::KMOS(dfDR)
det(dfDR_Matrix)
det(dfDR_Matrix)
pc1 <-  psych::principal(dfDR, nfactors = length(dfDR), rotate = "none")
#pc1#output all details of the PCA
plot(pc1$values, type = "b", main = "Plot 2: Scree Plot for PCA") #scree plot
pcf=princomp(dfDR)
factoextra::get_eigenvalue(pcf) %>%
kbl(caption = "Table 6: Eigenvalues and Variances for PCA") %>%
kable_styling()
facsol <- psych::fa(dfDR_Matrix, nfactors=4, obs=NA, n.iter=1, rotate="varimax", fm="pa")
psych::fa.diagram(facsol, main = "Plot 3: Factor Analisys")
# neuroticism openness
conscientiousnessDf<-dfDR[,conscientiousness]
neuroticismDf<-dfDR[,neuroticism]
opennessDf<-dfDR[,openness]
#Output our Cronbach Alpha values
conscientiousnessAlpha <- psych::alpha(conscientiousnessDf,check.keys=TRUE)['total']$total$raw_alpha
neuroticismAlpha <- psych::alpha(neuroticismDf,check.keys=TRUE)['total']$total$raw_alpha
opennessAlpha <- psych::alpha(opennessDf,check.keys=TRUE)['total']$total$raw_alpha
data.frame(conscientiousnessAlpha = conscientiousnessAlpha, neuroticismAlpha = neuroticismAlpha, opennessAlpha = opennessAlpha) %>%
kbl(caption = "Table 7: Cronbach Alpha values") %>%
kable_styling()
set.seed(123)
# setwd as the folder where this script is in
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
set.seed(123)
#Load and Install required packages
install_packages <- function(pkg) {
# Install package if it is not already
if (!(pkg %in% installed.packages()[, "Package"])){
install.packages(pkg, repos='http://cran.us.r-project.org')
}
library(pkg, character.only = TRUE)
} # end installPackages()
#Create the list of packages we need
pkg_list = c("ggplot2","dplyr","kableExtra", "caret", "Hmisc")
#Call our function passing it the list of packages
lapply(pkg_list, install_packages)
#load studentpartII dataset and check its head
dfAll <- read.csv("studentpartII.csv", header=T)
ncols <- ncol(dfAll)
nrows <- nrow(dfAll)
head(dfAll) %>%
kbl(caption = "Table 1: First lines of Student Dataset") %>%
kable_styling()
#Check if there are NAs on the dataset
na_count <-sapply(dfAll, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
na_count  %>% arrange(desc(na_count)) %>% slice(1:10)%>%
kbl(caption = "Table 1.1: Quantity of NAs per column") %>%
kable_styling()
extraversion <- c(
'E1',#          I am the life of the party.
'E2',#          I don't talk a lot. REVERSE CODE
'E3',#          I feel comfortable around people.
'E4',#          I keep in the background. REVERSE CODE
'E5',#          I start conversations.
'E6',#          I have little to say. REVERSE CODE
'E7',#          I talk to a lot of different people at parties.
'E8',#          I don't like to draw attention to myself. REVERSE CODE
'E9',#          I don't mind being the center of attention.
'E10'#        I am quiet around strangers. REVERSE CODE
)
# creating reverse code cols array to use later for reverse code
reverse_code_cols <- c('E2', 'E4', 'E6', 'E8', 'E10')
agreeableness <- c(
'A1',#          I feel little concern for others. REVERSE CODE
'A2',#          I am interested in people.
'A3',#          I insult people. REVERSE CODE
'A4',#          I sympathize with others' feelings.
'A5',#          I am not interested in other people's problems. REVERSE CODE
'A6',#          I have a soft heart.
'A7',#          I am not really interested in others. REVERSE CODE
'A8',#          I take time out for others.
'A9',#          I feel others' emotions.
'A10'#        I make people feel at ease.
)
reverse_code_cols <- c(reverse_code_cols, 'A1','A3','A5','A7')
conscientiousness <- c(
'C1',#          I am always prepared.
'C2',#          I leave my belongings around. REVERSE CODE
'C3',#          I pay attention to details.
'C4',#          I make a mess of things. REVERSE CODE
'C5',#          I get chores done right away.
'C6',#          I often forget to put things back in their proper place. REVERSE CODE
'C7',#          I like order.
'C8',#          I shirk my duties. REVERSE CODE
'C9',#          I follow a schedule.
'C10'#        I am exacting in my work.
)
reverse_code_cols <- c(reverse_code_cols, 'C2','C4','C6','C8')
neuroticism <- c(
'N1',#          I get stressed out easily.
'N2',#          I am relaxed most of the time. REVERSE CODE
'N3',#          I worry about things.
'N4',#          I seldom feel blue. REVERSE CODE
'N5',#          I am easily disturbed.
'N6',#          I get upset easily.
'N7',#          I change my mood a lot.
'N8',#          I have frequent mood swings.
'N9',#          I get irritated easily.
'N10'#        I often feel blue.
)
reverse_code_cols <- c(reverse_code_cols, 'N2','N4')
openness <- c(
'O1',#          I have a rich vocabulary.
'O2',#          I have difficulty understanding abstract ideas. REVERSE CODE
'O3',#          I have a vivid imagination.
'O4',#          I am not interested in abstract ideas. REVERSE CODE
'O5',#          I have excellent ideas.
'O6',#          I do not have a good imagination. REVERSE CODE
'O7',#          I am quick to understand things.
'O8',#          I use difficult words.
'O9',#          I spend time reflecting on things.
'O10'#        I am full of ideas.
)
reverse_code_cols <- c(reverse_code_cols, 'O2','O4','O6')
df <- select(dfAll, c(extraversion, agreeableness, conscientiousness, neuroticism, openness ))
head(df) %>%
kbl(caption = "Table 2: First lines of Student Dataset only with test columns") %>%
kable_styling()
#Check if there are Zeros on the dataset
na_count <-sapply(df, function(y) sum(length(which(y == 0))))
na_count <- data.frame(na_count)
top_missing <- (na_count  %>% arrange(desc(na_count)) %>% slice(1:1)) [[1]]
top_missing_perc <- round((top_missing * 100) / nrows,2)
na_count  %>% arrange(desc(na_count)) %>% slice(1:10) %>%
kbl(caption = "Table 3: Quantity of missed answers on the dataset") %>%
kable_styling()
# Function to find the mode
findMode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#for all columns
for (i in colnames(df)){
#if the columns has any occurence of zero
if (length(df[i][df[i] == 0]) > 0){
print (paste("looking at ", i))
columnMode <- findMode(df[,i])
print (paste("Zeros will be replaced by mode which is:", columnMode))
print(df[i][df[i] == 0])
#assign the mode of that columns to zero values
df[i][df[i] == 0] <- columnMode
}
}
#adjust reverse coded cols
for (i in reverse_code_cols){
print(i)
df[i] <- 5 + 1 - df[i]
}
dfDR <- select(df, c(conscientiousness, neuroticism, openness ))
summary(dfDR) %>%
kbl(caption = "Table 4: Summary Statistics of Dataset with Dimension Reduction Applied") %>%
kable_styling()
#create a correlation matrix
dfDR_Matrix<-cor(dfDR)
#round(dfDR_Matrix, 2)
#Showing significance levels also
#Hmisc::rcorr(as.matrix(dfDR))
#Visualisation of correlations using circles
#corrplot::corrplot(dfDR_Matrix, method="circle")
#Visualisation using numbers
#corrplot::corrplot(dfDR_Matrix, method="number")
#Visualisation of significance levels at 0.05
res1 <- corrplot::cor.mtest(dfDR_Matrix, conf.level = .95)
corrplot::corrplot(dfDR_Matrix, p.mat = res1$p, sig.level = .05,  main = "\nPlot 1: Corr Plot for significance level .05")
psych::cortest.bartlett(dfDR_Matrix, n=nrow(dfDR))
REdaS::KMOS(dfDR)
det(dfDR_Matrix)
pc1 <-  psych::principal(dfDR, nfactors = length(dfDR), rotate = "none")
#pc1#output all details of the PCA
plot(pc1$values, type = "b", main = "Plot 2: Scree Plot for PCA") #scree plot
pcf=princomp(dfDR)
factoextra::get_eigenvalue(pcf) %>%
kbl(caption = "Table 6: Eigenvalues and Variances for PCA") %>%
kable_styling()
facsol <- psych::fa(dfDR_Matrix, nfactors=4, obs=NA, n.iter=1, rotate="varimax", fm="pa")
psych::fa.diagram(facsol, main = "Plot 3: Factor Analisys")
# neuroticism openness
conscientiousnessDf<-dfDR[,conscientiousness]
neuroticismDf<-dfDR[,neuroticism]
opennessDf<-dfDR[,openness]
#Output our Cronbach Alpha values
conscientiousnessAlpha <- psych::alpha(conscientiousnessDf,check.keys=TRUE)['total']$total$raw_alpha
neuroticismAlpha <- psych::alpha(neuroticismDf,check.keys=TRUE)['total']$total$raw_alpha
opennessAlpha <- psych::alpha(opennessDf,check.keys=TRUE)['total']$total$raw_alpha
data.frame(conscientiousnessAlpha = conscientiousnessAlpha, neuroticismAlpha = neuroticismAlpha, opennessAlpha = opennessAlpha) %>%
kbl(caption = "Table 7: Cronbach Alpha values") %>%
kable_styling()
#Function to facilitate creation of an anovatab, extracted from my github: https://github.com/mauriciodeoliveirareis/Stat-Program-and-Applications-MATH9902/blob/main/linearGeneralRegModel/ca1/anovatab.R
anovatab <-
function(mod){
tab=as.matrix(anova(mod))
rows=dim(tab)[1]
moddf=sum(tab[,1])-tab[rows,1]
ssmodel=sum(tab[,2])-tab[rows,2]
msmodel=ssmodel/moddf
f=msmodel/tab[rows,3]
p=1-pf(f,moddf,tab[rows,1])
tab2=tab[(rows-1):rows,]
tab2[1,1:5]=c(moddf,ssmodel,msmodel,f,p)
tab2=rbind(tab2,c(moddf+tab2[2,1],ssmodel+tab2[2,2],rep(NA,3)))
rownames(tab2)=c('Model','Error','Total')
colnames(tab2)[1]='df'
return(print(tab2,na.print = "" , quote = FALSE,digits=3))
}
## fit  model
fit1=lm(O10~O1+O8, data = df)
print("Table 8: Linear Regression Model")
summary(fit1)
fit1=update(fit1,.~.+O1:O8)
print("Table 9: Linear Regression Model with Iteraction")
summary(fit1)
fit1=lm(O10~O1+O8, data = df)
print("Table 8: Linear Regression Model")
summary(fit1)
fit1=update(fit1,.~.+O1:O8)
print("Table 9: Linear Regression Model with Iteraction")
summary(fit1)
print("Table 10: Anova for Linear Regression Model with Iteraction")
anova(fit1)
fit1=update(fit1,.~.-O1:O8)
fit1=update(fit1,.~.-O1)
print("Table 11: Linear Regression Model with single term")
summary(fit1)
df$O1_MAX <- as.factor(with(df, ifelse(O1 == 5, 1, 0)))
df$O8_MAX <- as.factor(with(df, ifelse(O8 == 5, 1, 0)))
df$O10_MAX <- as.factor(with(df, ifelse(O10 == 5, 1, 0)))
fit2=glm(O10_MAX~O1_MAX+O8_MAX, family=binomial(),data=df)
print("Table 12: Logistic Regression Model")
summary(fit2)
fit2=glm(O10_MAX~O1_MAX+O8_MAX, family=binomial(),data=df)
print("Table 12: Logistic Regression Model")
summary(fit2)
anova(fit2)
log2(1)
log2(0)
log2(2)
log2(4)
log2(32)
log2(0.5)
2 ^ -1
2 ^ -2
2 ^ -0.5
2 ^ -0.75
2 ^ -0.8
2 ^ -0.9
2 ^ -0.999
2 ^ -0.999999
2 ^ -0.5
2 ^ -0.7
2 ^ -0.4
2 ^ -0.45
2 ^ -0.41
2 ^ -0.42
2 ^ -0.418
log2(3/8)
log2(3/8) * (3/8)
log2(5/8) * (5/8)
-0.5306391 -0.4237949
3/8*(-(2/3* log2(2/3))+(1/3 * log2(1/3)))
3/8*(-((2/3* log2(2/3))+(1/3 * log2(1/3))))
4/8*(-((4/4* log2(4/4))+(0/4 * log2(0/4))))
4/8*(-((4/4* log2(4/4))+(0/4 * 0))
;
4/8*(-((4/4* log2(4/4))+(0/4 * 0)))
4/4* log2(4/4)
0.954 - 0.344
3/8*(-((2/3* log2(2/3))+(1/3 * log2(1/3))))
0.3443609 + 0.3443609
0.954 - 0.689
5/8*(-((3/5* log2(3/5))+(2/5 * log2(2/5))))
0.954-0.607
(-((6/14* log2(6/14))+(3/14 * log2(3/14))+(5/14 * log2(5/14))))
